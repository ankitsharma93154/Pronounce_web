{"version":3,"file":"static/js/154.fe0b436c.chunk.js","mappings":"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","sources":["../node_modules/@vercel/speed-insights/package.json","../node_modules/@vercel/speed-insights/src/queue.ts","../node_modules/@vercel/speed-insights/src/utils.ts","../node_modules/@vercel/speed-insights/src/generic.ts","../node_modules/@vercel/speed-insights/src/react/utils.ts","../node_modules/@vercel/speed-insights/src/react/index.tsx"],"sourcesContent":["{\n  \"name\": \"@vercel/speed-insights\",\n  \"version\": \"1.2.0\",\n  \"description\": \"Speed Insights is a tool for measuring web performance and providing suggestions for improvement.\",\n  \"keywords\": [\n    \"speed-insights\",\n    \"vercel\"\n  ],\n  \"repository\": {\n    \"url\": \"github:vercel/speed-insights\",\n    \"directory\": \"packages/web\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"exports\": {\n    \"./package.json\": \"./package.json\",\n    \".\": {\n      \"browser\": \"./dist/index.mjs\",\n      \"import\": \"./dist/index.mjs\",\n      \"require\": \"./dist/index.js\"\n    },\n    \"./astro\": {\n      \"import\": \"./dist/astro/component.ts\"\n    },\n    \"./next\": {\n      \"browser\": \"./dist/next/index.mjs\",\n      \"import\": \"./dist/next/index.mjs\",\n      \"require\": \"./dist/next/index.js\"\n    },\n    \"./nuxt\": {\n      \"browser\": \"./dist/nuxt/index.mjs\",\n      \"import\": \"./dist/nuxt/index.mjs\",\n      \"require\": \"./dist/nuxt/index.js\"\n    },\n    \"./react\": {\n      \"browser\": \"./dist/react/index.mjs\",\n      \"import\": \"./dist/react/index.mjs\",\n      \"require\": \"./dist/react/index.js\"\n    },\n    \"./remix\": {\n      \"browser\": \"./dist/remix/index.mjs\",\n      \"import\": \"./dist/remix/index.mjs\",\n      \"require\": \"./dist/remix/index.js\"\n    },\n    \"./sveltekit\": {\n      \"svelte\": \"./dist/sveltekit/index.mjs\",\n      \"types\": \"./dist/sveltekit/index.d.ts\"\n    },\n    \"./vue\": {\n      \"browser\": \"./dist/vue/index.mjs\",\n      \"import\": \"./dist/vue/index.mjs\",\n      \"require\": \"./dist/vue/index.js\"\n    }\n  },\n  \"main\": \"./dist/index.js\",\n  \"types\": \"./dist/index.d.ts\",\n  \"typesVersions\": {\n    \"*\": {\n      \"*\": [\n        \"dist/index.d.ts\"\n      ],\n      \"react\": [\n        \"dist/react/index.d.ts\"\n      ],\n      \"next\": [\n        \"dist/next/index.d.ts\"\n      ],\n      \"nuxt\": [\n        \"dist/nuxt/index.d.ts\"\n      ],\n      \"remix\": [\n        \"dist/remix/index.d.ts\"\n      ],\n      \"sveltekit\": [\n        \"dist/sveltekit/index.d.ts\"\n      ],\n      \"vue\": [\n        \"dist/vue/index.d.ts\"\n      ]\n    }\n  },\n  \"scripts\": {\n    \"build\": \"tsup && pnpm copy-astro\",\n    \"copy-astro\": \"cp -R src/astro dist/\",\n    \"dev\": \"pnpm copy-astro && tsup --watch\",\n    \"postinstall\": \"node scripts/postinstall.mjs\",\n    \"lint\": \"eslint .\",\n    \"lint-fix\": \"eslint . --fix\",\n    \"test\": \"vitest\",\n    \"type-check\": \"tsc --noEmit\"\n  },\n  \"devDependencies\": {\n    \"@remix-run/react\": \"^2.14.0\",\n    \"@sveltejs/kit\": \"^2.8.1\",\n    \"@swc/core\": \"^1.9.2\",\n    \"@testing-library/jest-dom\": \"^6.6.3\",\n    \"@testing-library/react\": \"^16.0.1\",\n    \"@types/node\": \"^22.9.1\",\n    \"@types/react\": \"^18.3.12\",\n    \"copyfiles\": \"^2.4.1\",\n    \"jsdom\": \"^25.0.1\",\n    \"next\": \"^14.0.4\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"svelte\": \"^5.2.7\",\n    \"tsup\": \"8.3.5\",\n    \"vitest\": \"^2.1.5\",\n    \"vue\": \"^3.5.13\",\n    \"vue-router\": \"^4.4.5\"\n  },\n  \"peerDependencies\": {\n    \"@sveltejs/kit\": \"^1 || ^2\",\n    \"next\": \">= 13\",\n    \"react\": \"^18 || ^19 || ^19.0.0-rc\",\n    \"svelte\": \">= 4\",\n    \"vue\": \"^3\",\n    \"vue-router\": \"^4\"\n  },\n  \"peerDependenciesMeta\": {\n    \"@sveltejs/kit\": {\n      \"optional\": true\n    },\n    \"next\": {\n      \"optional\": true\n    },\n    \"react\": {\n      \"optional\": true\n    },\n    \"svelte\": {\n      \"optional\": true\n    },\n    \"vue\": {\n      \"optional\": true\n    },\n    \"vue-router\": {\n      \"optional\": true\n    }\n  }\n}\n","export const initQueue = (): void => {\n  // initialize va until script is loaded\n  if (window.si) return;\n\n  window.si = function a(...params): void {\n    (window.siq = window.siq || []).push(params);\n  };\n};\n","import type { SpeedInsightsProps } from './types';\n\nexport function isBrowser(): boolean {\n  return typeof window !== 'undefined';\n}\n\nfunction detectEnvironment(): 'development' | 'production' {\n  try {\n    const env = process.env.NODE_ENV;\n    if (env === 'development' || env === 'test') {\n      return 'development';\n    }\n  } catch (e) {\n    // do nothing, this is okay\n  }\n  return 'production';\n}\n\nexport function isProduction(): boolean {\n  return detectEnvironment() === 'production';\n}\n\nexport function isDevelopment(): boolean {\n  return detectEnvironment() === 'development';\n}\n\nexport function computeRoute(\n  pathname: string | null,\n  pathParams: Record<string, string | string[]> | null,\n): string | null {\n  if (!pathname || !pathParams) {\n    return pathname;\n  }\n\n  let result = pathname;\n  try {\n    const entries = Object.entries(pathParams);\n    // simple keys must be handled first\n    for (const [key, value] of entries) {\n      if (!Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value);\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[${key}]`);\n        }\n      }\n    }\n    // array values next\n    for (const [key, value] of entries) {\n      if (Array.isArray(value)) {\n        const matcher = turnValueToRegExp(value.join('/'));\n        if (matcher.test(result)) {\n          result = result.replace(matcher, `/[...${key}]`);\n        }\n      }\n    }\n    return result;\n  } catch (e) {\n    return pathname;\n  }\n}\n\nfunction turnValueToRegExp(value: string): RegExp {\n  return new RegExp(`/${escapeRegExp(value)}(?=[/?#]|$)`);\n}\n\nfunction escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n\nexport function getScriptSrc(\n  props: SpeedInsightsProps & { basePath?: string },\n): string {\n  if (props.scriptSrc) {\n    return props.scriptSrc;\n  }\n  if (isDevelopment()) {\n    return 'https://va.vercel-scripts.com/v1/speed-insights/script.debug.js';\n  }\n  if (props.dsn) {\n    return 'https://va.vercel-scripts.com/v1/speed-insights/script.js';\n  }\n  if (props.basePath) {\n    return `${props.basePath}/speed-insights/script.js`;\n  }\n  return '/_vercel/speed-insights/script.js';\n}\n","import { name as packageName, version } from '../package.json';\nimport { initQueue } from './queue';\nimport type { SpeedInsightsProps } from './types';\nimport { computeRoute, getScriptSrc, isBrowser, isDevelopment } from './utils';\n\n/**\n * Injects the Vercel Speed Insights script into the page head and starts tracking page views. Read more in our [documentation](https://vercel.com/docs/speed-insights).\n * @param [props] - Speed Insights options.\n * @param [props.debug] - Whether to enable debug logging in development. Defaults to `true`.\n * @param [props.beforeSend] - A middleware function to modify events before they are sent. Should return the event object or `null` to cancel the event.\n * @param [props.sampleRate] - When setting to 0.5, 50% of the events will be sent to Vercel Speed Insights. Defaults to `1`.\n * @param [props.route] - The dynamic route of the page.\n * @param [props.dsn] - The DSN of the project to send events to. Only required when self-hosting.\n */\nfunction injectSpeedInsights(\n  props: SpeedInsightsProps & {\n    framework?: string;\n    basePath?: string;\n  } = {},\n): {\n  setRoute: (route: string | null) => void;\n} | null {\n  // When route is null, it means that pages router is not ready yet. Will resolve soon\n  if (!isBrowser() || props.route === null) return null;\n\n  initQueue();\n\n  const src = getScriptSrc(props);\n\n  if (document.head.querySelector(`script[src*=\"${src}\"]`)) return null;\n\n  if (props.beforeSend) {\n    window.si?.('beforeSend', props.beforeSend);\n  }\n\n  const script = document.createElement('script');\n  script.src = src;\n  script.defer = true;\n  script.dataset.sdkn =\n    packageName + (props.framework ? `/${props.framework}` : '');\n  script.dataset.sdkv = version;\n\n  if (props.sampleRate) {\n    script.dataset.sampleRate = props.sampleRate.toString();\n  }\n  if (props.route) {\n    script.dataset.route = props.route;\n  }\n  if (props.endpoint) {\n    script.dataset.endpoint = props.endpoint;\n  } else if (props.basePath) {\n    script.dataset.endpoint = `${props.basePath}/speed-insights/vitals`;\n  }\n  if (props.dsn) {\n    script.dataset.dsn = props.dsn;\n  }\n  if (isDevelopment() && props.debug === false) {\n    script.dataset.debug = 'false';\n  }\n\n  script.onerror = (): void => {\n    // eslint-disable-next-line no-console -- Logging is okay here\n    console.log(\n      `[Vercel Speed Insights] Failed to load script from ${src}. Please check if any content blockers are enabled and try again.`,\n    );\n  };\n\n  document.head.appendChild(script);\n\n  return {\n    setRoute: (route: string | null): void => {\n      script.dataset.route = route ?? undefined;\n    },\n  };\n}\n\nexport { injectSpeedInsights, computeRoute };\nexport type { SpeedInsightsProps };\n\n// eslint-disable-next-line import/no-default-export -- Allow default export\nexport default {\n  injectSpeedInsights,\n  computeRoute,\n};\n","export function getBasePath(): string | undefined {\n  // !! important !!\n  // do not access env variables using process.env[varname]\n  // some bundles won't replace the value at build time.\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- we can't use optionnal here, it'll break if process does not exist.\n  if (typeof process === 'undefined' || typeof process.env === 'undefined') {\n    return undefined;\n  }\n  return process.env.REACT_APP_VERCEL_OBSERVABILITY_BASEPATH;\n}\n","'use client';\n\nimport { useEffect, useRef } from 'react';\nimport type { SpeedInsightsProps } from '../types';\nimport { computeRoute, injectSpeedInsights } from '../generic';\nimport { getBasePath } from './utils';\n\nexport function SpeedInsights(\n  props: SpeedInsightsProps & {\n    framework?: string;\n    basePath?: string;\n  },\n): JSX.Element | null {\n  useEffect(() => {\n    if (props.beforeSend) {\n      window.si?.('beforeSend', props.beforeSend);\n    }\n  }, [props.beforeSend]);\n\n  const setScriptRoute = useRef<((path: string) => void) | null>(null);\n  useEffect(() => {\n    if (!setScriptRoute.current) {\n      const script = injectSpeedInsights({\n        framework: props.framework ?? 'react',\n        basePath: props.basePath ?? getBasePath(),\n        ...props,\n      });\n      if (script) {\n        setScriptRoute.current = script.setRoute;\n      }\n    } else if (props.route) {\n      setScriptRoute.current(props.route);\n    }\n  }, [props.route]);\n\n  return null;\n}\n\nexport { computeRoute };\n"],"names":["name","version","initQueue","window","si","_len","arguments","length","params","Array","_key","siq","push","isDevelopment","env","process","e","detectEnvironment","computeRoute","pathname","pathParams","result","entries","Object","key","value","isArray","matcher","turnValueToRegExp","test","replace","join","RegExp","string","injectSpeedInsights","props","undefined","_a","route","src","scriptSrc","dsn","basePath","getScriptSrc","document","head","querySelector","beforeSend","call","script","createElement","defer","dataset","sdkn","framework","sdkv","sampleRate","toString","endpoint","debug","onerror","console","log","appendChild","setRoute","getBasePath","REACT_APP_VERCEL_OBSERVABILITY_BASEPATH","SpeedInsights","useEffect","setScriptRoute","useRef","current"],"sourceRoot":""}